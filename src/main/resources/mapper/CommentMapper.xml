<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jsut.zachweb.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.jsut.zachweb.model.Comment" >
    <id column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="comment_user_id" property="commentUserId" jdbcType="INTEGER" />
    <result column="comment_ad_id" property="commentAdId" jdbcType="INTEGER" />
    <result column="comment_content" property="commentContent" jdbcType="VARCHAR" />
    <result column="comment_time" property="commentTime" jdbcType="TIMESTAMP" />
    <result column="comment_like_number" property="commentLikeNumber" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    comment_id, comment_user_id, comment_ad_id, comment_content, comment_time, comment_like_number
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByAdId" parameterType="java.lang.Integer" >
    delete from comment
    where comment_ad_id = #{adId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jsut.zachweb.model.Comment" >
    insert into comment (comment_id, comment_user_id, comment_ad_id, 
      comment_content, comment_time, comment_like_number
      )
    values (#{commentId,jdbcType=INTEGER}, #{commentUserId,jdbcType=INTEGER}, #{commentAdId,jdbcType=INTEGER}, 
      #{commentContent,jdbcType=VARCHAR}, #{commentTime,jdbcType=TIMESTAMP}, #{commentLikeNumber,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jsut.zachweb.model.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="commentUserId != null" >
        comment_user_id,
      </if>
      <if test="commentAdId != null" >
        comment_ad_id,
      </if>
      <if test="commentContent != null" >
        comment_content,
      </if>
      <if test="commentTime != null" >
        comment_time,
      </if>
      <if test="commentLikeNumber != null" >
        comment_like_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="commentUserId != null" >
        #{commentUserId,jdbcType=INTEGER},
      </if>
      <if test="commentAdId != null" >
        #{commentAdId,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null" >
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentLikeNumber != null" >
        #{commentLikeNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jsut.zachweb.model.Comment" >
    update comment
    <set >
      <if test="commentUserId != null" >
        comment_user_id = #{commentUserId,jdbcType=INTEGER},
      </if>
      <if test="commentAdId != null" >
        comment_ad_id = #{commentAdId,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null" >
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentLikeNumber != null" >
        comment_like_number = #{commentLikeNumber,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jsut.zachweb.model.Comment" >
    update comment
    set comment_user_id = #{commentUserId,jdbcType=INTEGER},
      comment_ad_id = #{commentAdId,jdbcType=INTEGER},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_time = #{commentTime,jdbcType=TIMESTAMP},
      comment_like_number = #{commentLikeNumber,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>